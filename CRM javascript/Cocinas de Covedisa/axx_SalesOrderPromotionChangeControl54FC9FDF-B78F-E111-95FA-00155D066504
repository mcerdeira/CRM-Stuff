function GetActualPromotionData() {
  if(isFormReadOnly()){return;}
  if(Xrm.Page.getAttribute("axx_promocion").getValue() != null)
  ActualPromotionObj = Xrm.Page.getAttribute("axx_promocion").getValue();
  else
  ActualPromotionObj = null;
}

function PromotionChange() {
  var XMLLines;
  var SalesOrderId;
  var SalesOrderDetailId;
  var OnlineReserveId;
  var DOM;
  var BusEnt;
  var vBEIdx;
  var vBEFieldIdx;
  var NName;
  var NText;

  if(Xrm.Page.ui.getFormType() != 1)
  {
    if(Xrm.Page.getAttribute("axx_promocion").getValue() != ActualPromotionObj) //Si hubo un cambio en la selección efectivamente.
    {
      DOM = new ActiveXObject('Msxml2.DOMDocument');

      SalesOrderId = Xrm.Page.data.entity.getId();
      XMLLines = GetSalesOrderLines(SalesOrderId);

      DOM.loadXML(XMLLines);

      BusEnt = DOM.getElementsByTagName("BusinessEntity");

      if(BusEnt.length > 0) //Comprobar si hay líneas de pedido.
      {
        if(confirm('Al cambiar la promoción se eliminarán las líneas del pedido.\n\n¿Confirma el cambio?'))
        {
          for(vBEIdx = 0;vBEIdx < BusEnt.length; vBEIdx++)
          {
            SalesOrderDetailId = '';
            OnlineReserveId = '';

            for(vBEFieldIdx = 0; vBEFieldIdx < BusEnt(vBEIdx).childNodes.length; vBEFieldIdx++)
            {
              NName = BusEnt(vBEIdx).childNodes(vBEFieldIdx).nodeName;
              NText = BusEnt(vBEIdx).childNodes(vBEFieldIdx).text;

              switch (NName)
              {
              case 'q1:salesorderdetailid':
                SalesOrderDetailId = NText.replace('{', '').replace('}','');
                break;
              case 'q1:axx_onlinereserveid':
                OnlineReserveId = NText.replace('{', '').replace('}','');
                break;
              }
            }
            
            if(OnlineReserveId != '')
            DeleteEntityInstance('axx_onlinereserve', OnlineReserveId); //Liberamos el stock online para evitar que se habilite al eliminar la línea del pedido.
            
            DeleteEntityInstance('salesorderdetail', SalesOrderDetailId);
          }

          GetActualPromotionData();
          Xrm.Page.getControl("Productos").refresh();
        }
        else //Restaurar valor original.
        Xrm.Page.getAttribute("axx_promocion").setValue(ActualPromotionObj);
      }
    }
  }
}

function GetSalesOrderLines(SalesOrderId) {
  var xml;
  var xmlHttpRequest;

  SalesOrderId = SalesOrderId.replace('{','').replace('}','');

  xml =
  "<?xml version=\"1.0\" encoding=\"utf-8\"?>" +
  "<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">" +
  GenerateAuthenticationHeader() +
  "  <soap:Body>" +
  "    <RetrieveMultiple xmlns=\"http://schemas.microsoft.com/crm/2007/WebServices\">" +
  "      <query xmlns:q1=\"http://schemas.microsoft.com/crm/2006/Query\" xsi:type=\"q1:QueryExpression\">" +
  "        <q1:EntityName>salesorderdetail</q1:EntityName>" +
  "        <q1:ColumnSet xsi:type=\"q1:ColumnSet\">" +
  "          <q1:Attributes>" +
  "            <q1:Attribute>salesorderdetailid</q1:Attribute>" +
  "            <q1:Attribute>axx_onlinereserveid</q1:Attribute>" +
  "          </q1:Attributes>" +
  "        </q1:ColumnSet>" +
  "        <q1:Distinct>false</q1:Distinct>" +
  "        <q1:Criteria>" +
  "          <q1:FilterOperator>And</q1:FilterOperator>" +
  "          <q1:Conditions>" +
  "            <q1:Condition>" +
  "              <q1:AttributeName>salesorderid</q1:AttributeName>" +
  "              <q1:Operator>Equal</q1:Operator>" +
  "              <q1:Values>" +
  "                <q1:Value xmlns:q2=\"http://microsoft.com/wsdl/types/\" xsi:type=\"q2:guid\">" + SalesOrderId + "</q1:Value>" +
  "              </q1:Values>" +
  "            </q1:Condition>" +
  "          </q1:Conditions>" +
  "        </q1:Criteria>" +
  "      </query>" +
  "    </RetrieveMultiple>" +
  "  </soap:Body>" +
  "</soap:Envelope>";

  xmlHttpRequest = new ActiveXObject("Msxml2.XMLHTTP");

  xmlHttpRequest.Open("POST", "/mscrmservices/2007/CrmService.asmx", false);
  xmlHttpRequest.setRequestHeader("SOAPAction","http://schemas.microsoft.com/crm/2007/WebServices/RetrieveMultiple");
  xmlHttpRequest.setRequestHeader("Content-Type", "text/xml; charset=utf-8");
  xmlHttpRequest.setRequestHeader("Content-Length", xml.length);
  xmlHttpRequest.send(xml);

  return xmlHttpRequest.responseText;
}

function DeleteEntityInstance(EntityName, EntityInstanceId) {
  var xml;
  var xmlHttpRequest;

  xml = "<?xml version=\"1.0\" encoding=\"utf-8\"?>" +
  "<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">" +
  GenerateAuthenticationHeader() +
  "<soap:Body>" +
  "<Delete xmlns='http://schemas.microsoft.com/crm/2007/WebServices'>" +
  "<entityName>" + EntityName + "</entityName>" +
  "<id>" + EntityInstanceId + "</id>" +
  "</Delete>" +
  "</soap:Body>" +
  "</soap:Envelope>";

  xmlHttpRequest = new ActiveXObject("Msxml2.XMLHTTP");

  xmlHttpRequest.Open("POST", "/mscrmservices/2007/CrmService.asmx", false);
  xmlHttpRequest.setRequestHeader("SOAPAction","http://schemas.microsoft.com/crm/2007/WebServices/Delete");
  xmlHttpRequest.setRequestHeader("Content-Type", "text/xml; charset=utf-8");
  xmlHttpRequest.setRequestHeader("Content-Length", xml.length);
  xmlHttpRequest.send(xml);
}